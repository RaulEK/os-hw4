{"version":3,"sources":["components/Visualize.js","components/Result.js","components/UI.js","App.js","index.js"],"names":["Visualize","props","canvasRef","React","createRef","prevProps","prevState","snapshot","canvas","this","current","ctx","getContext","clearRect","clientWidth","clientHeight","font","fillStyle","i","grid","length","fillText","beginPath","rect","stroke","fill","j","fillRect","ref","width","height","Component","Result","values","fileNames","fileSizes","Array","from","filesToWrite","sizesToWrite","eemaldatud","lastRow","index","indexOf","splice","push","size","processInput","split","inputSeparator","array","fragments","files","Map","map","file","has","set","get","delete","fragmentedFiles","lookedFiles","lastFile","includes","fragmentedTotal","filesTotal","entries","key","value","Math","round","calculations","className","UI","choiceHandler","arrays","id","name","useState","choice","setChoice","handleChoice","userArray","setUserArray","type","checked","onChange","event","target","trim","onClick","App","setArray","ReactDOM","render","document","getElementById"],"mappings":"qSAqDeA,E,YAjDX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,UAAYC,IAAMC,YAFR,E,gFAKAC,EAAWC,EAAWC,GACrC,IAAMC,EAASC,KAAKP,UAAUQ,QACxBC,EAAMH,EAAOI,WAAW,MAC9BD,EAAIE,UAAU,EAAG,EAAGL,EAAOM,YAAaN,EAAOO,cAC/CJ,EAAIK,KAAO,qBACXL,EAAIM,UAAY,QAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,KAAKR,MAAMkB,KAAKC,OAAQF,IAAK,CAI7C,GAHU,IAANA,GACAP,EAAIU,SAAS,QAAUH,EAAG,GAAQ,GAAJA,EAAS,IAEb,MAA1BT,KAAKR,MAAMkB,KAAKD,GAAG,GAAY,CAC/BP,EAAIW,YACJX,EAAIY,KAAK,GAAQ,GAAJL,EAAQ,IAAM,IAC3BP,EAAIa,SACJb,EAAIM,UAAY,MAChBN,EAAIc,OACJd,EAAIM,UAAY,QAChBN,EAAIU,SAAS,4BAA0B,IAAS,GAAJH,EAAS,IACrD,MAEJ,IAAK,IAAIQ,EAAI,EAAGA,EAAIjB,KAAKR,MAAMkB,KAAKD,GAAGE,OAAQM,IAC3Cf,EAAIW,YACJX,EAAIY,KAAS,GAAJG,EAAS,GAAQ,GAAJR,EAAQ,GAAI,IAClCP,EAAIa,SAC0B,MAA1Bf,KAAKR,MAAMkB,KAAKD,GAAGQ,KACnBf,EAAIM,UAAY,SAChBN,EAAIgB,SAAa,GAAJD,EAAS,GAAQ,GAAJR,EAAS,EAAG,GAAI,IAC1CP,EAAIM,UAAY,QAChBN,EAAIU,SAASZ,KAAKR,MAAMkB,KAAKD,GAAGQ,GAAQ,GAAJA,EAAS,GAAQ,GAAJR,EAAS,Q,+BAOtE,OACI,6BACI,4BAAQU,IAAKnB,KAAKP,UAAW2B,MAAO,KAAMC,OAAQ,W,GA7C1C3B,IAAM4B,W,KCgG9B,IAmBeC,EAnBA,SAAC,GAAa,IAEnBb,EAjFV,SAAsBc,GAQlB,IAPA,IAAMC,EAAYD,EAAO,GACnBE,EAAYF,EAAO,GACrBd,EAAOiB,MAAMC,KAAKD,MAAMF,EAAUd,OAAS,IAAI,kBAAOgB,MAAMC,KAAKD,MAAM,KAAK,iBAAM,UAClFE,EAAe,GACfC,EAAe,GACfC,GAAa,EACbC,EAAUtB,EAAKA,EAAKC,OAAS,GACxBF,EAAI,EAAGA,EAAIgB,EAAUd,OAAQF,IAAK,CACvC,GAAqB,MAAjBiB,EAAUjB,GAAY,CACtBsB,GAAa,EACb,IAAIE,EAAQJ,EAAaK,QAAQT,EAAUhB,IAC3CoB,EAAaM,OAAOF,EAAO,GAC3BH,EAAaK,OAAOF,EAAO,QAE3BF,GAAa,EACbF,EAAaO,KAAKX,EAAUhB,IAC5BqB,EAAaM,KAAKV,EAAUjB,IAEhC,IAAK,IAAIQ,EAAI,EAAGA,EAAIY,EAAalB,OAAQM,IACrC,GAAIA,IAAMY,EAAalB,OAAS,IAAoB,IAAfoB,EAAsB,CAGvD,IAFA,IAAIM,EAAOP,EAAab,GACpBgB,EAAQ,EACLI,EAAO,GAAKJ,EAAQ,IACI,MAAvBvB,EAAKD,EAAI,GAAGwB,KACZvB,EAAKD,EAAI,GAAGwB,GAASJ,EAAaZ,GAClCoB,KAEJJ,IAEJ,GAAII,EAAO,EAAG,CACV3B,EAAKD,EAAI,GAAG,GAAK,IACjBuB,EAAUtB,EAAKD,GACf,YAKJ,IAFA,IAAI4B,EAAOP,EAAab,GACpBgB,EAAQ,EACLI,EAAO,GACN3B,EAAKD,GAAGwB,KAAWJ,EAAaZ,KAChCP,EAAKD,EAAI,GAAGwB,GAASJ,EAAaZ,GAClCoB,KAEJJ,IAKhB,MAAO,CAACvB,EAAMsB,GAiCDM,CAhGjB,SAAwBd,GACpBA,EAASA,EAAOe,MAAM,OAItB,IAHA,IAAId,EAAY,GACZC,EAAY,GAEPjB,EAAI,EAAGA,EAAIe,EAAOb,OAAQF,IAC3BA,EAAI,IAAM,EACVgB,EAAUW,KAAKZ,EAAOf,IAEtBiB,EAAUU,KAAKZ,EAAOf,IAG9B,MAAO,CAACgB,EAAWC,GAoFOc,CAFF,EAAXC,QAGPC,EA/BV,SAAsBV,GAClB,IAAMW,EAAQ,IAAIC,IAClBZ,EAAQa,KAAI,SAAAC,GAAI,OAAIH,EAAMI,IAAID,GAAQH,EAAMK,IAAIF,EAAMH,EAAMM,IAAIH,GAAQ,GAAKH,EAAMK,IAAIF,EAAM,MAC7FH,EAAMO,OAAO,KAIb,IAHA,IAAMC,EAAkB,GAClBC,EAAc,GAChBC,EAAW,GACN5C,EAAI,EAAGA,EAAIuB,EAAQrB,OAAQF,IACb,MAAfuB,EAAQvB,KACH2C,EAAYE,SAAStB,EAAQvB,IAEvB2C,EAAYE,SAAStB,EAAQvB,KAAO4C,IAAarB,EAAQvB,IAAmB,KAAb4C,GACtEF,EAAgBf,KAAKJ,EAAQvB,IAF7B2C,EAAYhB,KAAKJ,EAAQvB,IAI7B4C,EAAWrB,EAAQvB,IAG3B,IAAI8C,EAAkB,EAClBC,EAAa,EAlBU,uBAmB3B,YAA2Bb,EAAMc,UAAjC,+CAA4C,CAAC,IAAD,6BAAhCC,EAAgC,KAA3BC,EAA2B,KACpCR,EAAgBG,SAASI,KACzBH,GAAmBI,GAEvBH,GAAcG,GAvBS,kFAyB3B,MAAO,CAACC,KAAKC,MAAMV,EAAgBxC,OAASgC,EAAMN,KAAO,KAAS,IAAMuB,KAAKC,MAAMN,EAAkBC,EAAa,KAAS,KAMzGM,CAAapD,EAAK,IAEpC,OACI,oCACI,yBAAKqD,UAAU,eACX,wCACA,8EAA6C,2BAAIrB,EAAU,GAAd,MAC7C,mFAAwD,2BAAIA,EAAU,GAAd,OAE5D,yBAAKqB,UAAU,QACX,kBAAC,EAAD,CAAWrD,KAAMA,EAAK,QCtDvBsD,G,MAtDJ,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEHC,EAAS,CACX,CAACC,GAAI,EAAGC,KAAM,UAAWT,MAAO,gCAChC,CAACQ,GAAI,EAAGC,KAAM,QAAST,MAAO,oCAC9B,CAACQ,GAAI,EAAGC,KAAM,SAAUT,MAAO,8CALP,EAQAU,mBAAS,KART,mBAQrBC,EARqB,KAQbC,EARa,KAUtBC,EAAe,SAACb,GAClBY,EAAUZ,IAXc,EAcMU,mBAAS,IAdf,mBAcrBI,EAdqB,KAcVC,EAdU,KA4B5B,OACI,yBAAKX,UAAU,MACX,6GACCG,EAAOrB,KAAI,SAAAJ,GAAK,OACb,yBAAKiB,IAAKjB,EAAM0B,GAAIJ,UAAU,OAC1B,+BACI,2BAAOY,KAAK,QAAQC,QAASN,IAAW7B,EAAM0B,GACvCU,SAAU,kBAAML,EAAa/B,EAAM0B,OACzC1B,EAAM2B,MAEV3B,EAAMkB,UAGf,yBAAKI,UAAU,OACX,+BACI,2BAAOY,KAAK,QAAQC,QAASN,IAAWJ,EAAOvD,OAAS,EACjDkE,SAAU,kBAAML,EAAaN,EAAOvD,OAAS,MAFxD,aAKA,2BAAOgE,KAAK,OAAOhB,MAAOc,EAAWI,SA/BzB,SAACC,GACrBJ,EAAaI,EAAMC,OAAOpB,MAAMqB,YAgC5B,4BAAQC,QA7BY,WACpBX,EAASJ,EAAOvD,OAChBsD,EAAcQ,GAEdR,EAAcC,EAAOI,EAAS,GAAGX,SAyBjC,iBC3BGuB,EApBH,WAAO,IAAD,EAEYb,mBAAS,IAFrB,mBAEP5B,EAFO,KAEA0C,EAFA,KAQd,OACI,yBAAKhB,GAAG,WACJ,6BACI,kBAAC,EAAD,CAAIF,cAPI,SAACN,GACjBwB,EAASxB,OAQL,yBAAKI,UAAU,UACf,kBAAC,EAAD,CAAQtB,MAAOA,OCd3B2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d315b2de.chunk.js","sourcesContent":["import React from 'react';\n\nclass Visualize extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const canvas = this.canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\n        ctx.font = '16px Comic Sans Mr';\n        ctx.fillStyle = 'black';\n\n        for (let i = 0; i < this.props.grid.length; i++) {\n            if (i !== 0) {\n                ctx.fillText(\"Samm \" + i, 17, i * 30 + 20)\n            }\n            if (this.props.grid[i][0] === '!') {\n                ctx.beginPath();\n                ctx.rect(80, i * 30, 1000, 25);\n                ctx.stroke();\n                ctx.fillStyle = 'red';\n                ctx.fill();\n                ctx.fillStyle = 'white';\n                ctx.fillText('Uus fail ei mahu mÃ¤llu', 500, i * 30 + 17);\n                break;\n            }\n            for (let j = 0; j < this.props.grid[i].length; j++) {\n                ctx.beginPath();\n                ctx.rect(j * 20 + 80, i * 30, 20, 25);\n                ctx.stroke();\n                if (this.props.grid[i][j] !== ' ') {\n                    ctx.fillStyle = 'orange';\n                    ctx.fillRect(j * 20 + 81, i * 30 + 1, 18, 23);\n                    ctx.fillStyle = 'black';\n                    ctx.fillText(this.props.grid[i][j], j * 20 + 84, i * 30 + 18);\n                }\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas ref={this.canvasRef} width={1500} height={340}></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Visualize;","import React from 'react';\nimport Visualize from \"./Visualize\";\nimport '../App.css'\n\nfunction inputSeparator(values) {\n    values = values.split(/,|;/);\n    let fileNames = [];\n    let fileSizes = [];\n\n    for (let i = 0; i < values.length; i++) {\n        if (i % 2 === 0) {\n            fileNames.push(values[i])\n        } else {\n            fileSizes.push(values[i])\n        }\n    }\n    return [fileNames, fileSizes];\n}\n\nfunction processInput(values) {\n    const fileNames = values[0];\n    const fileSizes = values[1];\n    let grid = Array.from(Array(fileNames.length + 1), () => (Array.from(Array(50), () => \" \")));\n    let filesToWrite = [];\n    let sizesToWrite = [];\n    let eemaldatud = false;\n    let lastRow = grid[grid.length - 1];\n    for (let i = 0; i < fileNames.length; i++) {\n        if (fileSizes[i] === '-') {\n            eemaldatud = true;\n            let index = filesToWrite.indexOf(fileNames[i]);\n            filesToWrite.splice(index, 1);\n            sizesToWrite.splice(index, 1);\n        } else {\n            eemaldatud = false;\n            filesToWrite.push(fileNames[i]);\n            sizesToWrite.push(fileSizes[i]);\n        }\n        for (let j = 0; j < filesToWrite.length; j++) {\n            if (j === filesToWrite.length - 1 && eemaldatud === false) {\n                let size = sizesToWrite[j];\n                let index = 0;\n                while (size > 0 && index < 50) {\n                    if (grid[i + 1][index] === ' ') {\n                        grid[i + 1][index] = filesToWrite[j];\n                        size--;\n                    }\n                    index++;\n                }\n                if (size > 0) {\n                    grid[i + 1][0] = '!';\n                    lastRow = grid[i];\n                    break;\n                }\n            } else {\n                let size = sizesToWrite[j];\n                let index = 0;\n                while (size > 0) {\n                    if (grid[i][index] === filesToWrite[j]) {\n                        grid[i + 1][index] = filesToWrite[j];\n                        size--;\n                    }\n                    index++;\n                }\n            }\n        }\n    }\n    return [grid, lastRow];\n}\n\nfunction calculations(lastRow) {\n    const files = new Map();\n    lastRow.map(file => files.has(file) ? files.set(file, files.get(file) + 1) : files.set(file, 1));\n    files.delete(' ');\n    const fragmentedFiles = [];\n    const lookedFiles = [];\n    let lastFile = '';\n    for (let i = 0; i < lastRow.length; i++) {\n        if (lastRow[i] !== ' ') {\n            if (!lookedFiles.includes(lastRow[i])) {\n                lookedFiles.push(lastRow[i]);\n            } else if (lookedFiles.includes(lastRow[i]) && lastFile !== lastRow[i] && lastFile !== '') {\n                fragmentedFiles.push(lastRow[i]);\n            }\n            lastFile = lastRow[i];\n        }\n    }\n    let fragmentedTotal = 0;\n    let filesTotal = 0;\n    for (const [key, value] of files.entries()) {\n        if (fragmentedFiles.includes(key)) {\n            fragmentedTotal += value;\n        }\n        filesTotal += value;\n    }\n    return [Math.round(fragmentedFiles.length / files.size * 10000) / 100 , Math.round(fragmentedTotal / filesTotal * 10000) / 100];\n}\n\nconst Result = ({array}) => {\n\n    const grid = processInput(inputSeparator(array));\n    const fragments = calculations(grid[1]);\n\n    return (\n        <>\n            <div className='description'>\n                <h4>Tulemus:</h4>\n                <p>AllesjÃ¤Ã¤nud failidest on fragmenteerunud: <b>{fragments[0]}%</b></p>\n                <p>Fragmenteerunud failidele kuulub kasutataud ruumist: <b>{fragments[1]}%</b></p>\n            </div>\n            <div className='grid'>\n                <Visualize grid={grid[0]}/>\n            </div>\n        </>\n    )\n};\n\nexport default Result;","import React, {useState} from 'react';\nimport './UI.css'\n\nconst UI = ({choiceHandler}) => {\n\n    const arrays = [\n        {id: 1, name: 'Esimene', value: \"A,2;B,3;A,-;C,4;D,5;B,-;E,15\"},\n        {id: 2, name: 'Teine', value: \"A,4;B,3;C,6;D,5;B,-;E,5;A,-;F,10\"},\n        {id: 3, name: 'Kolmas', value: \"A,2;B,3;C,4;D,5;B,-;E,7;D,-;F,10;A,-;G,40\"},\n    ];\n\n    const [choice, setChoice] = useState('1');\n\n    const handleChoice = (value) => {\n        setChoice(value);\n    };\n\n    const [userArray, setUserArray] = useState('');\n\n    const handleUserArray = (event) => {\n        setUserArray(event.target.value.trim())\n    };\n\n    const renderVisualization = () => {\n        if (choice > arrays.length) {\n            choiceHandler(userArray)\n        } else {\n            choiceHandler(arrays[choice - 1].value)\n        }\n    };\n\n    return (\n        <div className='ui'>\n            <h3> Vali vÃµi sisesta jÃ¤rjend (kujul A,2;B,3;A,-;C,4). Max 10 sÃ¼ndmust. </h3>\n            {arrays.map(array =>\n                <div key={array.id} className=\"row\">\n                    <label>\n                        <input type=\"radio\" checked={choice === array.id}\n                               onChange={() => handleChoice(array.id)}/>\n                        {array.name}\n                    </label>\n                    {array.value}\n                </div>\n            )}\n            <div className=\"row\">\n                <label>\n                    <input type=\"radio\" checked={choice === arrays.length + 1}\n                           onChange={() => handleChoice(arrays.length + 1)}/>\n                    Enda oma:\n                </label>\n                <input type=\"text\" value={userArray} onChange={handleUserArray}/>\n            </div>\n            <button onClick={renderVisualization}>KÃ¤ivita</button>\n        </div>\n    )\n};\n\nexport default UI;","import React, {useState, useEffect} from 'react';\nimport Result from './components/Result';\nimport UI from './components/UI';\nimport './App.css';\n\nconst App = () => {\n\n    const [array, setArray] = useState('');\n\n    const handleArray = (value) => {\n        setArray(value)\n    };\n\n    return (\n        <div id=\"wrapper\">\n            <div>\n                <UI choiceHandler={handleArray}/>\n            </div>\n            <div className='result'>\n            <Result array={array}/>\n            </div>\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}